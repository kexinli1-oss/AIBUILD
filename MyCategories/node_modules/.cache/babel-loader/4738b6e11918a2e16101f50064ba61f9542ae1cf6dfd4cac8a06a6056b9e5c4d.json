{"ast":null,"code":"var _jsxFileName = \"C:\\\\Kexin\\\\AIBUILD\\\\MyCategories\\\\src\\\\component\\\\Categories.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { TreeSelect, Button } from 'antd';\nimport useCategories from '../useCategories';\nimport { fetchCategories } from '../actions/actions';\nimport 'antd/dist/reset.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Categories = () => {\n  _s();\n  alert(\"LchStart\");\n  const categories = useCategories();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const dispatch = useDispatch();\n  const onSelectCategory = value => {\n    setSelectedCategory(value);\n    alert(`Selected Category ID: ${value}`);\n  };\n  const fetchCategoriesWithSaga = () => {\n    dispatch(fetchCategories());\n  };\n  const fetchCategoriesWithCustomHook = async () => {\n    try {\n      //const response = await fetch('http://localhost:8080/categoryTree'); // Replace with your API endpoint\n      //const data1 = await response.json();\n      //const data = [data1];\n      const data = [{\n        name: 'Node1',\n        categoryId: '0-0',\n        children: [{\n          name: 'Child Node1',\n          categoryId: '0-0-1'\n        }, {\n          name: 'Child Node2',\n          categoryId: '0-0-2'\n        }]\n      }, {\n        name: 'Node2',\n        categoryId: '0-1'\n      }];\n      dispatch({\n        type: 'SET_CATEGORIES',\n        payload: data\n      });\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n      alert('lllll');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Category Selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: fetchCategoriesWithSaga,\n      children: \"Fetch Categories with Saga\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: fetchCategoriesWithCustomHook,\n      children: \"Fetch Categories with Custom Hook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TreeSelect, {\n      showSearch: true,\n      style: {\n        width: '100%'\n      },\n      value: selectedCategory,\n      dropdownStyle: {\n        maxHeight: 400,\n        overflow: 'auto'\n      },\n      fieldNames: {\n        label: \"name\",\n        title: \"name\",\n        value: \"categoryId\"\n      },\n      treeData: categories,\n      treeNodeFilterProp: \"name\",\n      placeholder: \"Select a category\",\n      treeDefaultExpandAll: true,\n      onSelect: onSelectCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Categories, \"GcSf9oAJwuAuJDRjBre6xTeXjrM=\", false, function () {\n  return [useCategories, useDispatch];\n});\n_c = Categories;\nexport default Categories;\nvar _c;\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","TreeSelect","Button","useCategories","fetchCategories","jsxDEV","_jsxDEV","Categories","_s","alert","categories","selectedCategory","setSelectedCategory","dispatch","onSelectCategory","value","fetchCategoriesWithSaga","fetchCategoriesWithCustomHook","data","name","categoryId","children","type","payload","error","console","fileName","_jsxFileName","lineNumber","columnNumber","onClick","showSearch","style","width","dropdownStyle","maxHeight","overflow","fieldNames","label","title","treeData","treeNodeFilterProp","placeholder","treeDefaultExpandAll","onSelect","_c","$RefreshReg$"],"sources":["C:/Kexin/AIBUILD/MyCategories/src/component/Categories.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { TreeSelect, Button } from 'antd';\n\nimport useCategories from '../useCategories';\nimport { fetchCategories } from '../actions/actions';\nimport 'antd/dist/reset.css';\n\nconst Categories = () => {\n  alert(\"LchStart\");\n  const categories = useCategories();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const dispatch = useDispatch();\n\n  const onSelectCategory = (value) => {\n    setSelectedCategory(value);\n    alert(`Selected Category ID: ${value}`);\n  };\n\n  const fetchCategoriesWithSaga = () => {\n    dispatch(fetchCategories());\n  };\n\n  const fetchCategoriesWithCustomHook = async () => {\n    try {\n      //const response = await fetch('http://localhost:8080/categoryTree'); // Replace with your API endpoint\n      //const data1 = await response.json();\n      //const data = [data1];\n      const data = [{name:'Node1',categoryId:'0-0',children:[{name:'Child Node1',categoryId: '0-0-1',},{name:'Child Node2',categoryId:'0-0-2',},],},{name:'Node2',categoryId:'0-1',},];\n      dispatch({ type: 'SET_CATEGORIES', payload: data });\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n      alert('lllll');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Category Selection</h1>\n      <Button onClick={fetchCategoriesWithSaga}>Fetch Categories with Saga</Button>\n      <Button onClick={fetchCategoriesWithCustomHook}>Fetch Categories with Custom Hook</Button>\n      <TreeSelect\n        showSearch\n        style={{ width: '100%' }}\n        value={selectedCategory}\n        dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\n        fieldNames={{label: \"name\", title:\"name\", value:\"categoryId\"}}\n        treeData={categories}\n        treeNodeFilterProp=\"name\"\n        placeholder=\"Select a category\"\n        treeDefaultExpandAll\n        onSelect={onSelectCategory}\n      />\n    </div>\n  );\n};\n\nexport default Categories;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}